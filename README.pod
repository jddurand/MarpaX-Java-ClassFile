=pod

=encoding UTF-8

=head1 NAME

MarpaX::Java::ClassFile - Java .class parsing

=head1 VERSION

version 0.009

=head1 SYNOPSIS

    use MarpaX::Java::ClassFile;

    my $classFilename = shift || 'defaultFilename.class';
    my $o = MarpaX::Java::ClassFile->new(filename => $classFilename);
    my $ast = $o->ast;
    print "Javap-like output is using overloaded stringification: $ast\n";

=head1 DESCRIPTION

This module provide and manage an AST of an Java .class file, as per Java Virtual Machine Specification SE 8 Edition.

=head1 SUBROUTINES/METHODS

=head2 new($class, %options --> InstanceOf['MarpaX::Java::ClassFile'])

Instantiate a new object, named $self later in this document. Takes as parameter a hash of options that can be:

=over

=item Str filename

Location of the .class file on your filesystem. This option is required.

=back

=head2 ast($self --> InstanceOf['MarpaX::Java::ClassFile::Struct::ClassFile'])

Returns the parse result, as an instance of L<MarpaX::Java::ClassFile::Struct::ClassFile>.

=head1 SEE ALSO

L<Marpa::R2>

L<The Java Virtual Machine Specification, Java SE 8 Edition, Chapter 4: The class File Format|https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html>

=head1 AUTHOR

Jean-Damien Durand <jeandamiendurand@free.fr>

=head1 CONTRIBUTOR

=for stopwords Graham Knop

Graham Knop <haarg@haarg.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2016 by Jean-Damien Durand.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
